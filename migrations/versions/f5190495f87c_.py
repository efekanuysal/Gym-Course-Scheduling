"""empty message

Revision ID: f5190495f87c
Revises: 
Create Date: 2025-05-25 09:42:15.459121

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f5190495f87c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Blacklist',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('Instructors',
    sa.Column('SSN', sa.String(length=20), nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('lastName', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('SSN')
    )
    op.create_table('Membership',
    sa.Column('sign', sa.String(length=2), nullable=False),
    sa.Column('fee', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('typeName', sa.String(length=10), nullable=False),
    sa.Column('plan', sa.String(length=8), nullable=False),
    sa.PrimaryKeyConstraint('sign')
    )
    op.create_table('Room',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roomName', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('Course',
    sa.Column('courseName', sa.String(length=20), nullable=False),
    sa.Column('capacity', sa.Numeric(precision=2), nullable=False),
    sa.Column('isSpecial', sa.Boolean(), nullable=False),
    sa.Column('InstructorID', sa.String(length=20), nullable=False),
    sa.Column('roomId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['InstructorID'], ['Instructors.SSN'], ),
    sa.ForeignKeyConstraint(['roomId'], ['Room.ID'], ),
    sa.PrimaryKeyConstraint('courseName')
    )
    op.create_table('Users',
    sa.Column('SSN', sa.String(length=20), nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('lastName', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('membershipType', sa.String(length=2), nullable=True),
    sa.ForeignKeyConstraint(['membershipType'], ['Membership.sign'], ),
    sa.PrimaryKeyConstraint('SSN')
    )
    op.create_table('Phone',
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('userSSN', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['userSSN'], ['Users.SSN'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('phone')
    )
    op.create_table('RoomSchedule',
    sa.Column('scheduleID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roomId', sa.Integer(), nullable=False),
    sa.Column('scheduleDate', sa.Date(), nullable=False),
    sa.Column('scheduleTime', sa.Time(), nullable=False),
    sa.Column('bookingType', sa.String(length=10), nullable=False),
    sa.Column('userID', sa.String(length=20), nullable=True),
    sa.Column('courseName', sa.String(length=20), nullable=True),
    sa.Column('isBooked', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['courseName'], ['Course.courseName'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['roomId'], ['Room.ID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userID'], ['Users.SSN'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('scheduleID')
    )
    op.create_table('User_Course',
    sa.Column('courseName', sa.String(length=20), nullable=False),
    sa.Column('userID', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['courseName'], ['Course.courseName'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userID'], ['Users.SSN'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('courseName', 'userID')
    )
    op.create_table('Feedback',
    sa.Column('feedBackNo', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roomId', sa.Integer(), nullable=False),
    sa.Column('userID', sa.String(length=20), nullable=False),
    sa.Column('scheduleID', sa.Integer(), nullable=False),
    sa.Column('score', sa.Numeric(precision=2, scale=1), nullable=False),
    sa.Column('comment', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['roomId'], ['Room.ID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scheduleID'], ['RoomSchedule.scheduleID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userID'], ['Users.SSN'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('feedBackNo')
    )
    op.drop_table('roomschedule')
    op.drop_table('course')
    op.drop_table('room')
    op.drop_table('instructors')
    op.drop_table('user_course')
    op.drop_table('feedback')
    op.drop_table('membership')
    op.drop_table('phone')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('ssn', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('membershiptype', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['membershiptype'], ['membership.sign'], name='fk_membershiptype'),
    sa.PrimaryKeyConstraint('ssn', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('phone',
    sa.Column('userssn', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.CheckConstraint("phone::text ~ '^\\+?[0-9\\s\\-\\(\\)]{6,20}$'::text", name=op.f('phone_phone_check')),
    sa.ForeignKeyConstraint(['userssn'], ['users.ssn'], name=op.f('fk_userssn')),
    sa.PrimaryKeyConstraint('phone', name=op.f('phone_pkey'))
    )
    op.create_table('membership',
    sa.Column('sign', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('fee', sa.NUMERIC(precision=7, scale=2), autoincrement=False, nullable=False),
    sa.Column('typename', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('plan', sa.VARCHAR(length=8), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('sign', name='membership_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('feedback',
    sa.Column('feedbackno', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('roomid', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('userid', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('scheduleid', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('score', sa.NUMERIC(precision=2, scale=1), autoincrement=False, nullable=False),
    sa.Column('comment', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['roomid'], ['room.id'], name=op.f('fk_roomid')),
    sa.ForeignKeyConstraint(['scheduleid'], ['roomschedule.scheduleid'], name=op.f('fk_scheduleid')),
    sa.ForeignKeyConstraint(['userid'], ['users.ssn'], name=op.f('fk_userid')),
    sa.PrimaryKeyConstraint('feedbackno', name=op.f('feedback_pkey'))
    )
    op.create_table('user_course',
    sa.Column('coursename', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('userid', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['coursename'], ['course.coursename'], name=op.f('fk_coursename')),
    sa.ForeignKeyConstraint(['userid'], ['users.ssn'], name=op.f('fk_userid')),
    sa.PrimaryKeyConstraint('coursename', 'userid', name=op.f('user_course_pkey'))
    )
    op.create_table('instructors',
    sa.Column('ssn', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.CheckConstraint("phone::text ~ '^\\+?[0-9\\s\\-\\(\\)]{6,20}$'::text", name='instructors_phone_check'),
    sa.PrimaryKeyConstraint('ssn', name='instructors_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('room',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('room_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('roomname', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='room_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('course',
    sa.Column('coursename', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('capacity', sa.NUMERIC(precision=2, scale=0), autoincrement=False, nullable=False),
    sa.Column('isspecial', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('instructorid', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('roomid', sa.INTEGER(), server_default=sa.text("nextval('course_roomid_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['instructorid'], ['instructors.ssn'], name='fk_instructorid'),
    sa.ForeignKeyConstraint(['roomid'], ['room.id'], name='fk_roomid'),
    sa.PrimaryKeyConstraint('coursename', name='course_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('roomschedule',
    sa.Column('scheduleid', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('roomid', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('scheduledate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('scheduletime', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('bookingtype', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('userid', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('coursename', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('isbooked', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['coursename'], ['course.coursename'], name=op.f('fk_coursename')),
    sa.ForeignKeyConstraint(['roomid'], ['room.id'], name=op.f('fk_roomid')),
    sa.ForeignKeyConstraint(['userid'], ['users.ssn'], name=op.f('fk_userid')),
    sa.PrimaryKeyConstraint('scheduleid', name=op.f('roomschedule_pkey'))
    )
    op.drop_table('Feedback')
    op.drop_table('User_Course')
    op.drop_table('RoomSchedule')
    op.drop_table('Phone')
    op.drop_table('Users')
    op.drop_table('Course')
    op.drop_table('Room')
    op.drop_table('Membership')
    op.drop_table('Instructors')
    op.drop_table('Blacklist')
    # ### end Alembic commands ###
